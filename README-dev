框架简介
为了使这个项目显得有趣而且不那么新潮，有必要显得她不是使用敏捷开发方法。做到这点最好的方式莫过于写一些文档

主要程序文件：
main.py是主程序入口，负责细胞自动机的初始化和迭代调度。
display.py是显示模块，负责显示细胞自动机中细胞所处的世界
logic.py是细胞自动机的实现代码。为了更好地扩展（和装逼），有必要修改代码来动态加载指定的细胞自动机
可以看出程序是典型的MVC结构。众所周知的是，如果一个程序使用了典型结构，那么它一定不会有趣。

细胞自动机对象的定义：
细胞自动机表现为一个类，它需要实现下列函数：
load(argv)进行自动机初始化
iterate()对细胞自动机进行一次迭代
vision()将自动机的状态可视化，返回值为(w,h,map)，其中w,h为可视化图片的长宽，map为w*h图像
由于vision函数的存在，打破了典型的MVC模式。所以这个程序又变得有趣了

logic.py提供工厂函数loadWorld。它可以生成一个细胞自动机对象。
display.py提供函数：
	load(m)用来初始化界面 m定义为(w,h,map)，与vision函数返回值的意义相同
	refresh(m, status)用来更新界面，m仍是上述含义，status是状态
